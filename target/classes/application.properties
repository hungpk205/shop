#spring.datasource.url = jdbc:mysql://localhost:3306/shop_service?useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=

spring.datasource.url = jdbc:mysql://node211243-shop-service.j.layershift.co.uk/shop_service?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=RNHqfa29894

#server.port=8443
# Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true

# The format used for the keystore 
#server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore.jks
# The password used to generate the certificate
#server.ssl.key-store-password=admin123
# The alias mapped to the certificate
#server.ssl.key-alias=tomcat


spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
#spring.jackson.serialization.fail-on-empty-beans=false

app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 864000000


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir = ./uploads
